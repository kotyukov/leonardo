from keyboards.inline.styles_ratio import *
from keyboards.inline.operation import *
from keyboards.inline.styles_demo import *
from keyboards.inline.content_demo import *
from keyboards.inline.style_quantity import *
from keyboards.inline.final_settings import *
from keyboards.inline.image_source import *

ratio_set = {
    '10_90': styles_ratio_1090,
    '30_70': styles_ratio_3070,
    '50_50': styles_ratio_5050,
    '70_30': styles_ratio_7030,
    '90_10': styles_ratio_9010
}

operation_set = {
    'ndf': operation_,
    'smile': operation_gan,
    'nst': operation_nst,
}

source_set = {
    'ndf': source_,
    'collection': source_collection,
    'upload_new': source_upload,
}

demo_style_set = {
    '1': demo_style_1,
    '2': demo_style_2,
    '3': demo_style_3,
    '4': demo_style_4,
    '5': demo_style_5,
    '6': demo_style_6,
    '7': demo_style_7,
    '8': demo_style_8,
    '9': demo_style_9,
    '10': demo_style_10,
    '11': demo_style_11,
    '12': demo_style_12,
    '13': demo_style_13,
    '14': demo_style_14,
    '15': demo_style_15,
    '16': demo_style_16,
    '17': demo_style_17,
    '18': demo_style_18
}

demo_content_set = {
    '1': demo_content_1,
    '2': demo_content_2,
    '3': demo_content_3,
    '4': demo_content_4,
    '5': demo_content_5,
    '6': demo_content_6,
}

style_quantity_set = {
    '1': select_style_quantity_one,
    '2': select_style_quantity_two,
}

resolution_epoch_set = {
    '250_5' : resolution_epoch_250_5,
    '400_5' : resolution_epoch_400_5,
    '600_5' : resolution_epoch_600_5,
    '250_10': resolution_epoch_250_10,
    '400_10': resolution_epoch_400_10,
    '600_10': resolution_epoch_600_10,
    '250_15': resolution_epoch_250_15,
    '400_15': resolution_epoch_400_15,
    '600_15': resolution_epoch_600_15,
}

messages = {
    'admin_notification': ("""Бот запущен"""),
    'welcome'           : ("""Привет, я Leonardo!
У меня есть нейронная сеть, с помощью которой я помогу тебе перенести на своё фото любые стили-эффекты.
Чтобы начать жми кнопку «Поехали!»"""),
    'select_content'    : ("""Вам необходимо предоставить картинку-контент, \
на которую будет перенесён новый стиль."""),
    'select_style'      : ("""Вам необходимо предоставить выбранное количество картинок-стилей, \
с которых будут перенесены характерные признаки."""),
    'smilification'     : ("""Если вы читаете этот текст, значит я не успел добавить styleGAN-сеть, \
или мне просто стало лень. Но она тут всё же появится, когда-нибудь."""),
    'help_menu'         : ("""Чтобы посмотреть примеры результатов работы каждого из алгоритмов \
выберите соответствующий пункт меню."""),
    'style_quantity'    : ("""Выберите количество стилей для переноса."""),
    'upload_content'    : ("""Пришлите в ответном сообщении одну картинку-контент. \
Если по ошибке будет прислано несколько картинок, то все кроме последней будут проигнорированы."""),
    'content_load_succ' : ("""Картинка-контент успешно загружена."""),
    'style_load_succ'   : ("""Стиль успешно загружен."""),
    'upload_style'      : ("""Пришлите в ответном сообщении картинку-стиль. \
Если по ошибке будет прислано несколько картинок, то все кроме последней будут проигнорированы."""),
    'upload_style_2'    : ("""Пришлите в ответном сообщении вторую картинку-стиль. \
Желательно чтобы она отличалась от первой, иначе какой в ней смысл?!
Если по ошибке будет прислано несколько картинок, то все кроме последней будут проигнорированы."""),
    'ratio_select'      : ("""Ранее вы выбрали опцию одновременного переноса двух стилей. \
Теперь выберите в какой пропорции должны быть применены выбранные стили."""),
    'example_smile'     : ("""Пример работы алгоритма styleGAN: добавление улыбки."""),
    'example_nst_one'   : ("""Пример работы алгоритма NST: перенос одного стиля на целевое \
изображение."""),
    'example_nst_two'   : ("""Пример работы алгоритма NST: одновременный перенос двух стилей на \
целевое изображение."""),
    'choose_content_pic': ("""Выберите картинку на которую будет перенесён новый стиль"""),
    'choose_style_pic'  : ("""Выберите стиль из коллекции"""),
    'choose_style2_pic' : ("""Выберите второй стиль из коллекции. Желательно чтобы он отличался от \
первого, иначе какой в нём смысл?!"""),
    'settings_menu'     : ("""Выберите один из режимов:

«Demo» - размер выбранного контент-изображения будет пропорционально преобразован до 250 пикселей \
по меньшей стороне. Идеальный режим для первого знакомства с алгоритмом Neural Style \
Transfer, который позволит перенести стили с максимальной доступной скоростью.

«Standart» - размер выбранного контент-изображения будет пропорционально преобразован до 400 пикселей \
по меньшей стороне. Оптимальный режим по соотношению качество/времязатраты.

«Maximal» - размер выбранного контент-изображения будет пропорционально преобразован до 600 пикселей \
по меньшей стороне. Максимальное качество при максимальном времени ожидания, запаситесь терпением :)

Количество шагов - выберите количество итераций, которое должен совершить алгоритм переноса \
стиля. В теории, больше шагов - лучше качество, но только в теории. Начни свои эксперименты с \
5 шагов ;)


Рассчётное время ожидания: """),
    'select_operation'  : ("""Выберите операцию, которую должен проделать бот.

«Смайлификация» - пришлите боту фотографию на которой человек слишком серьёзен, \
и он поможет ему улыбнуться :)

«Перенос стиля» - пришлите боту любое изображение-контент на которое необходимо \
перенести новый стиль, так же пришлите одно или два изображения-стиля, с которых \
будут перенесены характерные признаки. Вы можете выбрать готовые изображения \
контента и (или) стилей из библиотеки бота, либо загрузить данные изображения \
самостоятельно.

Чтобы посмотреть примеры результатов операций откройте справку.
"""),
    'devinfo'           : ("""Телеграмм бот разработан в рамках итогового проекта первого \
семестра школы глубокого обучения МФТИ (набор - весна 2020).
Использованная модель NST основана на оригинальном алгоритме Gatys et al.
Приложение развёрнуто на платформе GoogleCloudPlatform, Debian GNU/Linux 10 (buster), \
Intel Skylake CPU.

Котюков Александр, 2020."""),
}